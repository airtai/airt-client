name: Deploy nbdev-mkdocs generated documentation to GitHub Pages

on:
  push:
    branches: [ "main", "master" ]
  workflow_dispatch:
jobs:
  deploy:
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/airtai/airt-service-dev:latest
    env:
      AIRT_SERVER_URL: "http://airt-service:6006"
      AIRT_SERVICE_USERNAME: "johndoe"
      AIRT_SERVICE_PASSWORD: ${{ secrets.CI_AIRT_SERVICE_SUPER_USER_PASSWORD }}
      AIRT_SERVICE_SUPER_USER: "kumaran"

      DB_USERNAME: "root"
      DB_PASSWORD: "SuperSecretPassword"
      DB_HOST: "mysql"
      DB_PORT: 3306
      DB_DATABASE: "airt_service"
      DB_DATABASE_SERVER: "mysql"

      AIRT_SERVICE_SUPER_USER_PASSWORD: ${{ secrets.CI_AIRT_SERVICE_SUPER_USER_PASSWORD }}
      AIRT_TOKEN_SECRET_KEY: ${{ secrets.CI_AIRT_TOKEN_SECRET_KEY }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
      AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
      AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
      AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
      GOOGLE_CLIENT_ID: ${{ secrets.CI_GOOGLE_CLIENT_ID }}
      GOOGLE_CLIENT_SECRET: ${{ secrets.CI_GOOGLE_CLIENT_SECRET }}
      GITHUB_CLIENT_ID: ${{ secrets.CI_GITHUB_CLIENT_ID }}
      GITHUB_CLIENT_SECRET: ${{ secrets.CI_GITHUB_CLIENT_SECRET }}
      INFOBIP_BASE_URL: ${{ secrets.CI_INFOBIP_BASE_URL }}
      INFOBIP_API_KEY: ${{ secrets.CI_INFOBIP_API_KEY }}
      INFOBIP_SENDER_ID: ${{ secrets.CI_INFOBIP_SENDER_ID }}

      CLICKHOUSE_USERNAME: ${{ secrets.CLICKHOUSE_USERNAME }}
      CLICKHOUSE_PASSWORD: ${{ secrets.CLICKHOUSE_PASSWORD }}
      CLICKHOUSE_HOST: ${{ secrets.CLICKHOUSE_HOST }}
      CLICKHOUSE_DATABASE: ${{ secrets.CLICKHOUSE_DATABASE }}
      CLICKHOUSE_PORT: ${{ secrets.CLICKHOUSE_PORT }}
      CLICKHOUSE_PROTOCOL: ${{ secrets.CLICKHOUSE_PROTOCOL }}
      CLICKHOUSE_EVENTS_TABLE: ${{ secrets.CLICKHOUSE_EVENTS_TABLE }}

      STORAGE_BUCKET_PREFIX: github-airt-client-testing-${{ github.run_id }}
      AZURE_STORAGE_ACCOUNT_PREFIX: ghac${{ github.run_id }}
    services:
      airt-service:
        image: ghcr.io/airtai/airt-service:${{ github.GITHUB_REF_NAME == 'main' && 'latest' || 'dev'  }}
        env:
          STORAGE_BUCKET_PREFIX: github-airt-client-testing-${{ github.run_id }}
          AZURE_STORAGE_ACCOUNT_PREFIX: ghac${{ github.run_id }}
          DB_USERNAME: "root"
          DB_PASSWORD: "SuperSecretPassword"
          DB_HOST: "mysql"
          DB_PORT: 3306
          DB_DATABASE: "airt_service"
          DB_DATABASE_SERVER: "mysql"
          AIRFLOW__CORE__SQL_ALCHEMY_CONN: "mysql+mysqldb://root:SuperSecretPassword@mysql:3306/airflow"
          AIRFLOW_PASSWORD: ${{ secrets.CI_AIRFLOW_PASSWORD }}
          JOB_EXECUTOR: "fastapi"
          AIRT_SERVICE_SUPER_USER_PASSWORD: ${{ secrets.CI_AIRT_SERVICE_SUPER_USER_PASSWORD }}
          AIRT_TOKEN_SECRET_KEY: ${{ secrets.CI_AIRT_TOKEN_SECRET_KEY }}
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AZURE_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          AZURE_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
          AZURE_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
          AZURE_CLIENT_SECRET: ${{ secrets.AZURE_CLIENT_SECRET }}
          AZURE_RESOURCE_GROUP: ${{ secrets.AZURE_RESOURCE_GROUP }}
          GOOGLE_CLIENT_ID: ${{ secrets.CI_GOOGLE_CLIENT_ID }}
          GOOGLE_CLIENT_SECRET: ${{ secrets.CI_GOOGLE_CLIENT_SECRET }}
          GITHUB_CLIENT_ID: ${{ secrets.CI_GITHUB_CLIENT_ID }}
          GITHUB_CLIENT_SECRET: ${{ secrets.CI_GITHUB_CLIENT_SECRET }}
          INFOBIP_BASE_URL: ${{ secrets.CI_INFOBIP_BASE_URL }}
          INFOBIP_API_KEY: ${{ secrets.CI_INFOBIP_API_KEY }}
          INFOBIP_SENDER_ID: ${{ secrets.CI_INFOBIP_SENDER_ID }}
        ports:
          - 8080:8080
          - 6006:6006
      mysql:
        image: mysql:8.0.31
        env:
          MYSQL_DATABASE: "airt_service"
          MYSQL_USER: "airt"
          MYSQL_PASSWORD: "SuperSecretPassword"
          MYSQL_ROOT_PASSWORD: "SuperSecretPassword"
        ports:
          - 3306:3306
    steps:
      - uses: actions/checkout@v3
      - run: chown -R $(id -u):$(id -g) $PWD
      - run: echo "PATH=$PATH:$HOME/.local/bin" >> $GITHUB_ENV
      - run: sleep 300
      # - run: pip install -e ".[dev]"

      - name: Install Dependencies
        env:
          USE_PRE: ${{ inputs.pre }}
        shell: bash
        run: |
          set -ux
          python3 -m pip install --upgrade pip
          if [ $USE_PRE ]; then
            pip install -Uq git+https://github.com/fastai/ghapi.git
            pip install -Uq git+https://github.com/fastai/fastcore.git
            pip install -Uq git+https://github.com/fastai/execnb.git
            pip install -Uq git+https://github.com/fastai/nbdev.git
            wget -q $(curl https://latest.fast.ai/pre/quarto-dev/quarto-cli/linux-amd64.deb)
            sudo dpkg -i quarto*.deb
          else
            pip install -Uq nbdev
            nbdev_install_quarto
          fi
          if [[ ${{ github.repository }} != "airtai/nbdev-mkdocs" ]]; then
            pip install nbdev-mkdocs
          fi
          test -f setup.py && pip install -e ".[dev]"
      - name: Build nbdev docs
        shell: bash
        run: |
          nbdev_docs --n_workers 1
      - name: Build mkdocs docs
        shell: bash
        run: nbdev_mkdocs docs
      - name: Enable GitHub Pages
        shell: bash
        run: python3 -c 'import ghapi.core,nbdev.config,sys; api = ghapi.core.GhApi(owner=nbdev.config.get_config().user, repo=nbdev.config.get_config().repo, token="${{secrets.GITHUB_TOKEN}}"); api.enable_pages(branch="gh-pages")'
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force_orphan: true
          publish_dir: ./mkdocs/site
          # The following lines assign commit authorship to the official GH-Actions bot for deploys to `gh-pages` branch.
          # You can swap them out with your own user credentials.
          user_name: github-actions[bot]
          user_email: 41898282+github-actions[bot]@users.noreply.github.com
